{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useCategories.js\nimport { useState, useEffect, useMemo } from \"react\";\nimport { getCategoriesForUser, createCategoryForUser } from \"../services/categoryService\";\nimport { getCategoryTotal } from \"../services/totalService\";\nconst useCategories = userId => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [totalsMap, setTotalsMap] = useState({});\n  const [newExpenseCategoryName, setNewExpenseCategoryName] = useState(\"\");\n  const [newExpenseCategoryDesc, setNewExpenseCategoryDesc] = useState(\"\");\n  const [newIncomeCategoryName, setNewIncomeCategoryName] = useState(\"\");\n  const [newIncomeCategoryDesc, setNewIncomeCategoryDesc] = useState(\"\");\n  const [isExpenseModalVisible, setIsExpenseModalVisible] = useState(false);\n  const [isIncomeModalVisible, setIsIncomeModalVisible] = useState(false);\n  const addCategory = async type => {\n    const name = type === \"EXPENSE\" ? newExpenseCategoryName : newIncomeCategoryName;\n    const desc = type === \"EXPENSE\" ? newExpenseCategoryDesc : newIncomeCategoryDesc;\n    if (name.trim() === \"\") return;\n    try {\n      const categoryData = {\n        name,\n        description: desc,\n        type\n      };\n      const created = await createCategoryForUser(userId, categoryData);\n      setCategories(prev => [...prev, created]); // Functional update for safety\n\n      if (type === \"EXPENSE\") {\n        setNewExpenseCategoryName(\"\");\n        setNewExpenseCategoryDesc(\"\");\n      } else {\n        setNewIncomeCategoryName(\"\");\n        setNewIncomeCategoryDesc(\"\");\n      }\n    } catch (error) {\n      console.error(`Error adding ${type} category:`, error);\n    }\n  };\n\n  // Fetch categories\n  useEffect(() => {\n    if (!userId) return;\n    const fetchCategories = async () => {\n      try {\n        const fetchedCategories = await getCategoriesForUser(userId);\n        setCategories(fetchedCategories);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    };\n    fetchCategories();\n  }, [userId]);\n\n  // Calculate totals\n  useEffect(() => {\n    if (!userId || categories.length === 0) return;\n    const fetchTotals = async () => {\n      const newTotalsMap = {};\n      await Promise.all(categories.map(async cat => {\n        try {\n          const total = await getCategoryTotal(userId, cat.categoryId, cat.type);\n          newTotalsMap[cat.categoryId] = total;\n        } catch {\n          newTotalsMap[cat.categoryId] = 0;\n        }\n      }));\n      setTotalsMap(newTotalsMap);\n    };\n    fetchTotals();\n  }, [categories, userId]);\n  return {\n    // Expose only what's needed\n    categories,\n    totalsMap,\n    newExpenseCategoryName,\n    setNewExpenseCategoryName,\n    newExpenseCategoryDesc,\n    setNewExpenseCategoryDesc,\n    newIncomeCategoryName,\n    setNewIncomeCategoryName,\n    newIncomeCategoryDesc,\n    setNewIncomeCategoryDesc,\n    isExpenseModalVisible,\n    setIsExpenseModalVisible,\n    isIncomeModalVisible,\n    setIsIncomeModalVisible,\n    addCategory\n  };\n};\n_s(useCategories, \"T78bWfqXXnixCcZ0Aii8w0WeJME=\");\nexport default useCategories;","map":{"version":3,"names":["useState","useEffect","useMemo","getCategoriesForUser","createCategoryForUser","getCategoryTotal","useCategories","userId","_s","categories","setCategories","totalsMap","setTotalsMap","newExpenseCategoryName","setNewExpenseCategoryName","newExpenseCategoryDesc","setNewExpenseCategoryDesc","newIncomeCategoryName","setNewIncomeCategoryName","newIncomeCategoryDesc","setNewIncomeCategoryDesc","isExpenseModalVisible","setIsExpenseModalVisible","isIncomeModalVisible","setIsIncomeModalVisible","addCategory","type","name","desc","trim","categoryData","description","created","prev","error","console","fetchCategories","fetchedCategories","length","fetchTotals","newTotalsMap","Promise","all","map","cat","total","categoryId"],"sources":["C:/Users/Mariya Zolovska/OneDrive/Desktop/finance-app-frontend/src/hooks/useCategories.js"],"sourcesContent":["// hooks/useCategories.js\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n  getCategoriesForUser,\r\n  createCategoryForUser,\r\n} from \"../services/categoryService\";\r\nimport { getCategoryTotal } from \"../services/totalService\";\r\n\r\nconst useCategories = (userId) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [totalsMap, setTotalsMap] = useState({});\r\n  const [newExpenseCategoryName, setNewExpenseCategoryName] = useState(\"\");\r\n  const [newExpenseCategoryDesc, setNewExpenseCategoryDesc] = useState(\"\");\r\n  const [newIncomeCategoryName, setNewIncomeCategoryName] = useState(\"\");\r\n  const [newIncomeCategoryDesc, setNewIncomeCategoryDesc] = useState(\"\");\r\n  const [isExpenseModalVisible, setIsExpenseModalVisible] = useState(false);\r\n  const [isIncomeModalVisible, setIsIncomeModalVisible] = useState(false);\r\n\r\n  const addCategory = async (type) => {\r\n    const name =\r\n      type === \"EXPENSE\" ? newExpenseCategoryName : newIncomeCategoryName;\r\n    const desc =\r\n      type === \"EXPENSE\" ? newExpenseCategoryDesc : newIncomeCategoryDesc;\r\n\r\n    if (name.trim() === \"\") return;\r\n\r\n    try {\r\n      const categoryData = { name, description: desc, type };\r\n      const created = await createCategoryForUser(userId, categoryData);\r\n      setCategories((prev) => [...prev, created]); // Functional update for safety\r\n\r\n      if (type === \"EXPENSE\") {\r\n        setNewExpenseCategoryName(\"\");\r\n        setNewExpenseCategoryDesc(\"\");\r\n      } else {\r\n        setNewIncomeCategoryName(\"\");\r\n        setNewIncomeCategoryDesc(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error adding ${type} category:`, error);\r\n    }\r\n  };\r\n\r\n  // Fetch categories\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const fetchedCategories = await getCategoriesForUser(userId);\r\n        setCategories(fetchedCategories);\r\n      } catch (error) {\r\n        console.error(\"Error fetching categories:\", error);\r\n      }\r\n    };\r\n    fetchCategories();\r\n  }, [userId]);\r\n\r\n  // Calculate totals\r\n  useEffect(() => {\r\n    if (!userId || categories.length === 0) return;\r\n    const fetchTotals = async () => {\r\n      const newTotalsMap = {};\r\n      await Promise.all(\r\n        categories.map(async (cat) => {\r\n          try {\r\n            const total = await getCategoryTotal(\r\n              userId,\r\n              cat.categoryId,\r\n              cat.type\r\n            );\r\n            newTotalsMap[cat.categoryId] = total;\r\n          } catch {\r\n            newTotalsMap[cat.categoryId] = 0;\r\n          }\r\n        })\r\n      );\r\n      setTotalsMap(newTotalsMap);\r\n    };\r\n    fetchTotals();\r\n  }, [categories, userId]);\r\n\r\n  return {\r\n    // Expose only what's needed\r\n    categories,\r\n    totalsMap,\r\n    newExpenseCategoryName,\r\n    setNewExpenseCategoryName,\r\n    newExpenseCategoryDesc,\r\n    setNewExpenseCategoryDesc,\r\n    newIncomeCategoryName,\r\n    setNewIncomeCategoryName,\r\n    newIncomeCategoryDesc,\r\n    setNewIncomeCategoryDesc,\r\n    isExpenseModalVisible,\r\n    setIsExpenseModalVisible,\r\n    isIncomeModalVisible,\r\n    setIsIncomeModalVisible,\r\n    addCategory,\r\n  };\r\n};\r\n\r\nexport default useCategories;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}