{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useAuthContext } from \"../context/AuthContext\";\nimport { createProjectForUser, deleteProjectForUser, getProjectsForUser, updateProjectForUser } from \"../services/projectService\";\nexport const useProjects = () => {\n  _s();\n  const {\n    user,\n    token\n  } = useAuthContext();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentProject, setCurrentProject] = useState(null);\n  const fetchProjects = useCallback(async () => {\n    if (!user) return;\n    setLoading(true);\n    try {\n      const fetchedProjects = await getProjectsForUser(user.id, token);\n      setProjects(fetchedProjects);\n      setError(null);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [user, token]);\n  const createProject = async projectData => {\n    try {\n      const newProject = await createProjectForUser(user.id, projectData);\n      setProjects(prev => [...prev, newProject]);\n      return newProject;\n    } catch (err) {\n      setError(err);\n      throw err;\n    }\n  };\n  const updateProject = async (projectId, projectData) => {\n    try {\n      const updatedProject = await updateProjectForUser(user.id, projectId, projectData);\n      setProjects(prev => prev.map(project => project.id === projectId ? updatedProject : project));\n      return updatedProject;\n    } catch (err) {\n      setError(err);\n      throw err;\n    }\n  };\n  const deleteProject = async projectId => {\n    try {\n      await deleteProjectForUser(user.id, projectId);\n      setProjects(prev => prev.filter(project => project.id !== projectId));\n    } catch (err) {\n      setError(err);\n      throw err;\n    }\n  };\n\n  // Load projects on component mount\n  useEffect(() => {\n    fetchProjects();\n  }, [fetchProjects]);\n  return {\n    projects,\n    loading,\n    error,\n    fetchProjects,\n    createProject,\n    updateProject,\n    deleteProject,\n    currentProject,\n    setCurrentProject\n  };\n};\n_s(useProjects, \"61rW3vMJh3baKTav4b7KnICyLkw=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useEffect","useCallback","useAuthContext","createProjectForUser","deleteProjectForUser","getProjectsForUser","updateProjectForUser","useProjects","_s","user","token","projects","setProjects","loading","setLoading","error","setError","currentProject","setCurrentProject","fetchProjects","fetchedProjects","id","err","createProject","projectData","newProject","prev","updateProject","projectId","updatedProject","map","project","deleteProject","filter"],"sources":["C:/Users/Mariya Zolovska/OneDrive/Desktop/finance-app-frontend/src/hooks/useProjects.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { useAuthContext } from \"../context/AuthContext\";\r\nimport {\r\n  createProjectForUser,\r\n  deleteProjectForUser,\r\n  getProjectsForUser,\r\n  updateProjectForUser,\r\n} from \"../services/projectService\";\r\n\r\nexport const useProjects = () => {\r\n  const { user, token } = useAuthContext();\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [currentProject, setCurrentProject] = useState(null);\r\n\r\n  const fetchProjects = useCallback(async () => {\r\n    if (!user) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const fetchedProjects = await getProjectsForUser(user.id, token);\r\n      setProjects(fetchedProjects);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user, token]);\r\n\r\n  const createProject = async (projectData) => {\r\n    try {\r\n      const newProject = await createProjectForUser(user.id, projectData);\r\n      setProjects((prev) => [...prev, newProject]);\r\n      return newProject;\r\n    } catch (err) {\r\n      setError(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const updateProject = async (projectId, projectData) => {\r\n    try {\r\n      const updatedProject = await updateProjectForUser(\r\n        user.id,\r\n        projectId,\r\n        projectData\r\n      );\r\n      setProjects((prev) =>\r\n        prev.map((project) =>\r\n          project.id === projectId ? updatedProject : project\r\n        )\r\n      );\r\n      return updatedProject;\r\n    } catch (err) {\r\n      setError(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const deleteProject = async (projectId) => {\r\n    try {\r\n      await deleteProjectForUser(user.id, projectId);\r\n      setProjects((prev) => prev.filter((project) => project.id !== projectId));\r\n    } catch (err) {\r\n      setError(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Load projects on component mount\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, [fetchProjects]);\r\n\r\n  return {\r\n    projects,\r\n    loading,\r\n    error,\r\n    fetchProjects,\r\n    createProject,\r\n    updateProject,\r\n    deleteProject,\r\n    currentProject,\r\n    setCurrentProject,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SACEC,oBAAoB,EACpBC,oBAAoB,EACpBC,kBAAkB,EAClBC,oBAAoB,QACf,4BAA4B;AAEnC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGR,cAAc,CAAC,CAAC;EACxC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMoB,aAAa,GAAGlB,WAAW,CAAC,YAAY;IAC5C,IAAI,CAACQ,IAAI,EAAE;IAEXK,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMM,eAAe,GAAG,MAAMf,kBAAkB,CAACI,IAAI,CAACY,EAAE,EAAEX,KAAK,CAAC;MAChEE,WAAW,CAACQ,eAAe,CAAC;MAC5BJ,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZN,QAAQ,CAACM,GAAG,CAAC;IACf,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,IAAI,EAAEC,KAAK,CAAC,CAAC;EAEjB,MAAMa,aAAa,GAAG,MAAOC,WAAW,IAAK;IAC3C,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMtB,oBAAoB,CAACM,IAAI,CAACY,EAAE,EAAEG,WAAW,CAAC;MACnEZ,WAAW,CAAEc,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,UAAU,CAAC,CAAC;MAC5C,OAAOA,UAAU;IACnB,CAAC,CAAC,OAAOH,GAAG,EAAE;MACZN,QAAQ,CAACM,GAAG,CAAC;MACb,MAAMA,GAAG;IACX;EACF,CAAC;EAED,MAAMK,aAAa,GAAG,MAAAA,CAAOC,SAAS,EAAEJ,WAAW,KAAK;IACtD,IAAI;MACF,MAAMK,cAAc,GAAG,MAAMvB,oBAAoB,CAC/CG,IAAI,CAACY,EAAE,EACPO,SAAS,EACTJ,WACF,CAAC;MACDZ,WAAW,CAAEc,IAAI,IACfA,IAAI,CAACI,GAAG,CAAEC,OAAO,IACfA,OAAO,CAACV,EAAE,KAAKO,SAAS,GAAGC,cAAc,GAAGE,OAC9C,CACF,CAAC;MACD,OAAOF,cAAc;IACvB,CAAC,CAAC,OAAOP,GAAG,EAAE;MACZN,QAAQ,CAACM,GAAG,CAAC;MACb,MAAMA,GAAG;IACX;EACF,CAAC;EAED,MAAMU,aAAa,GAAG,MAAOJ,SAAS,IAAK;IACzC,IAAI;MACF,MAAMxB,oBAAoB,CAACK,IAAI,CAACY,EAAE,EAAEO,SAAS,CAAC;MAC9ChB,WAAW,CAAEc,IAAI,IAAKA,IAAI,CAACO,MAAM,CAAEF,OAAO,IAAKA,OAAO,CAACV,EAAE,KAAKO,SAAS,CAAC,CAAC;IAC3E,CAAC,CAAC,OAAON,GAAG,EAAE;MACZN,QAAQ,CAACM,GAAG,CAAC;MACb,MAAMA,GAAG;IACX;EACF,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IACdmB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,OAAO;IACLR,QAAQ;IACRE,OAAO;IACPE,KAAK;IACLI,aAAa;IACbI,aAAa;IACbI,aAAa;IACbK,aAAa;IACbf,cAAc;IACdC;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CA9EWD,WAAW;EAAA,QACEL,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}