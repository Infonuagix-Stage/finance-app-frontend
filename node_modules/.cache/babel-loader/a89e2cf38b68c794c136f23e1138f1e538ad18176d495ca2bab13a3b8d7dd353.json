{"ast":null,"code":"// categoryService.js\nimport axios from \"axios\";\nconst api = axios.create({\n  baseURL: `${process.env.REACT_APP_BACKEND_URL}/api/v1`,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Ajout de l'intercepteur pour le token si nécessaire\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport const getCategoryByName = async (userId, categoryName) => {\n  const response = await api.get(`/users/${userId}/categories/${encodeURIComponent(categoryName)}`);\n  return response.data;\n};\n\n// Vous pouvez également avoir d'autres fonctions, par exemple pour créer une catégorie, etc.\n\nexport const getCategoriesForUser = async userId => {\n  // Retrieve the token from localStorage\n  const yourJwtToken = localStorage.getItem(\"token\");\n  console.log(\"Token envoyé dans l'en-tête Authorization :\", yourJwtToken);\n\n  // Make the request with the Authorization header\n  const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/v1/users/${userId}/categories`, {\n    headers: {\n      Authorization: `Bearer ${yourJwtToken}`\n    }\n  });\n  return response.data; // Return the categories array\n};\nexport const createCategoryForUser = async (userId, categoryData) => {\n  const yourJwtToken = localStorage.getItem(\"token\");\n  console.log(\"Token envoyé dans l'en-tête Authorization :\", yourJwtToken);\n  const response = await api.post(`/users/${userId}/categories`,\n  // utilisation de la route relative\n  categoryData,\n  // ici categoryData est un objet { name, description, type }\n  {\n    headers: {\n      Authorization: `Bearer ${yourJwtToken}`\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_BACKEND_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","getCategoryByName","userId","categoryName","response","get","encodeURIComponent","data","getCategoriesForUser","yourJwtToken","console","log","createCategoryForUser","categoryData","post"],"sources":["C:/Users/Mariya Zolovska/OneDrive/Desktop/finance-app-frontend/src/services/categoryService.js"],"sourcesContent":["// categoryService.js\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: `${process.env.REACT_APP_BACKEND_URL}/api/v1`,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\n// Ajout de l'intercepteur pour le token si nécessaire\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\nexport const getCategoryByName = async (userId, categoryName) => {\r\n  const response = await api.get(\r\n    `/users/${userId}/categories/${encodeURIComponent(categoryName)}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\n\r\n// Vous pouvez également avoir d'autres fonctions, par exemple pour créer une catégorie, etc.\r\n\r\nexport const getCategoriesForUser = async (userId) => {\r\n  // Retrieve the token from localStorage\r\n  const yourJwtToken = localStorage.getItem(\"token\");\r\n  console.log(\"Token envoyé dans l'en-tête Authorization :\", yourJwtToken);\r\n\r\n  // Make the request with the Authorization header\r\n  const response = await axios.get(\r\n    `${process.env.REACT_APP_BACKEND_URL}/api/v1/users/${userId}/categories`,\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${yourJwtToken}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  return response.data; // Return the categories array\r\n};\r\n\r\nexport const createCategoryForUser = async (userId, categoryData) => {\r\n  const yourJwtToken = localStorage.getItem(\"token\");\r\n  console.log(\"Token envoyé dans l'en-tête Authorization :\", yourJwtToken);\r\n\r\n  const response = await api.post(\r\n    `/users/${userId}/categories`, // utilisation de la route relative\r\n    categoryData, // ici categoryData est un objet { name, description, type }\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${yourJwtToken}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,SAAS;EACtDC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AACD,OAAO,MAAMG,iBAAiB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,YAAY,KAAK;EAC/D,MAAMC,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,GAAG,CAC5B,UAAUH,MAAM,eAAeI,kBAAkB,CAACH,YAAY,CAAC,EACjE,CAAC;EACD,OAAOC,QAAQ,CAACG,IAAI;AACtB,CAAC;;AAGD;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAON,MAAM,IAAK;EACpD;EACA,MAAMO,YAAY,GAAGd,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAClDc,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEF,YAAY,CAAC;;EAExE;EACA,MAAML,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAC9B,GAAGnB,OAAO,CAACC,GAAG,CAACC,qBAAqB,iBAAiBc,MAAM,aAAa,EACxE;IACEb,OAAO,EAAE;MACPQ,aAAa,EAAE,UAAUY,YAAY;IACvC;EACF,CACF,CAAC;EAED,OAAOL,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMK,qBAAqB,GAAG,MAAAA,CAAOV,MAAM,EAAEW,YAAY,KAAK;EACnE,MAAMJ,YAAY,GAAGd,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAClDc,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEF,YAAY,CAAC;EAExE,MAAML,QAAQ,GAAG,MAAMrB,GAAG,CAAC+B,IAAI,CAC7B,UAAUZ,MAAM,aAAa;EAAE;EAC/BW,YAAY;EAAE;EACd;IACExB,OAAO,EAAE;MACPQ,aAAa,EAAE,UAAUY,YAAY;IACvC;EACF,CACF,CAAC;EAED,OAAOL,QAAQ,CAACG,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}